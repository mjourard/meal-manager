spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}${DB_QUERY_PARAMS}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
# for production, set this value to validate
spring.jpa.hibernate.ddl-auto= update

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0


## Email configuration
spring.mail.host=email-smtp.${AWS_SES_REGION}.amazonaws.com
spring.mail.username=${AWS_SMTP_USERNAME}
spring.mail.password=${AWS_SMTP_PASSWORD}
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.templates.path=src/main/resources/email-templates/
from.email.address=${MEALMANAGER_EMAIL_FROM}

## AWS S3 Configuration for LocalStack
aws.region=${AWS_REGION:us-east-1}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:test-bucket}
# Enable LocalStack endpoint in development - default to null for prod (will use AWS S3)
aws.endpoint=${AWS_S3_ENDPOINT:http://localhost:4566}
aws.s3.recipes-image-folder=${AWS_S3_RECIPES_IMAGE_FOLDER:recipe-images}

## Rabbit MQ
tutorial.client.duration=5000
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:guest}

## Frontend
cors.allowed.origin=${CORS_ALLOWED_ORIGIN}

# Clerk JWT Configuration
auth.jwt.jwks-uri=${CLERK_JWKS_URI:https://flexible-bass-47.clerk.accounts.dev/.well-known/jwks.json}
auth.jwt.issuer=${CLERK_ISSUER:https://flexible-bass-47.clerk.accounts.dev}
# aud is optional for Clerk tokens
# auth.jwt.audience=

# Clerk API configuration for user management
clerk.api.base-url=${CLERK_API_BASE_URL:https://api.clerk.dev/v1}
clerk.api.key=${CLERK_API_KEY}

# Application environment settings
app.environment=${APP_ENVIRONMENT:dev}
app.debug.enabled=true
app.version=@app.version@
app.build.timestamp=@build.timestamp@
app.api.url=${API_URL:http://localhost:8080}

# Logging configuration for debugging (only applied when app.debug.enabled=true)
logging.level.com.mealmanager.api.security=DEBUG
logging.level.org.springframework.security=DEBUG

# Spring Boot Logging Configuration
# Log to a file
logging.file.name=logs/api/spring-boot-app.log
# Set log file max size
logging.logback.rollingpolicy.max-file-size=10MB
# Set maximum number of archive log files to keep
logging.logback.rollingpolicy.max-history=7
# Total size of log archives
logging.logback.rollingpolicy.total-size-cap=100MB
# Clean the archive logs when the current log is ready to be archived
logging.logback.rollingpolicy.clean-history-on-start=false
# Log pattern for console output
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
# Log pattern for file output
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# File logging configuration
app.logging.file.enabled=${APP_LOGGING_FILE_ENABLED:false}
app.logging.directory=${APP_LOGGING_DIRECTORY:../logs/api}
app.logging.include-metadata=${APP_LOGGING_INCLUDE_METADATA:true}
app.logging.include-correlation-id=${APP_LOGGING_INCLUDE_CORRELATION_ID:true}

# OpenAPI configuration
springdoc.api-docs.path=/api/public/api-docs
springdoc.swagger-ui.path=/api/public/swagger-ui