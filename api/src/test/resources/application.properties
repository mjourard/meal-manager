# Base test configuration - most settings are in application-test.properties
# Test-specific configuration
spring.datasource.driver-class-name=org.postgresql.Driver
# The following properties will be overridden by TestContainersConfig
# These are just placeholders
spring.datasource.url=jdbc:postgresql://localhost:5432/placeholder
spring.datasource.username=placeholder
spring.datasource.password=placeholder

# Ensure we're using PostgreSQL dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Enable Flyway for proper migration testing
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.clean-on-validation-error=true

# Use validate mode to ensure the schema is created by Flyway migrations
spring.jpa.hibernate.ddl-auto=validate

# Hibernate configuration
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

## Email configuration (overridden in application-test.properties)
spring.mail.host=email-smtp.${AWS_SES_REGION}.amazonaws.com
spring.mail.username=${AWS_SMTP_USERNAME}
spring.mail.password=${AWS_SMTP_PASSWORD}
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.templates.path=src/main/resources/email-templates/
from.email.address=${MEALMANAGER_EMAIL_FROM}

## AWS S3 Configuration for LocalStack
aws.region=${AWS_REGION:us-east-1}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:test-bucket}
aws.access-key=${AWS_ACCESS_KEY:test-key}
aws.secret-key=${AWS_SECRET_KEY:test-secret}
# Enable LocalStack endpoint in development - default to null for prod (will use AWS S3)
aws.endpoint=${AWS_S3_ENDPOINT:http://localhost:4566}
aws.s3.recipes-image-folder=${AWS_S3_RECIPES_IMAGE_FOLDER:recipe-images}


## Rabbit MQ
tutorial.client.duration=5000

## Frontend
cors.allowed.origin=http://localhost:3000

# Clerk JWT Configuration
auth.jwt.jwks-uri=${CLERK_JWKS_URI:https://flexible-bass-47.clerk.accounts.dev/.well-known/jwks.json}
auth.jwt.issuer=${CLERK_ISSUER:https://flexible-bass-47.clerk.accounts.dev}
# aud is optional for Clerk tokens
# auth.jwt.audience=

# Clerk API configuration for user management
clerk.api.base-url=${CLERK_API_BASE_URL:https://api.clerk.dev/v1}
clerk.api.key=placeholder-key

# Application environment settings
app.environment=dev
app.debug.enabled=true
app.version=0.0.1
app.build.timestamp=2025-01-01T01:01:01z
app.api.url=http://localhost:8080

# Logging configuration for debugging (only applied when app.debug.enabled=true)
logging.level.com.mealmanager.api.security=DEBUG
logging.level.org.springframework.security=DEBUG