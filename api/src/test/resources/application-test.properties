# Test-specific application properties

# Database configuration is handled by TestContainersConfig

# Email configuration - will use the real email service but with test-specific settings
# These settings will be overridden by environment variables in CI/CD environments
spring.mail.host=${TEST_MAIL_HOST:email-smtp.${AWS_SES_REGION:us-east-1}.amazonaws.com}
spring.mail.username=${TEST_MAIL_USERNAME:${AWS_SMTP_USERNAME}}
spring.mail.password=${TEST_MAIL_PASSWORD:${AWS_SMTP_PASSWORD}}
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.templates.path=src/main/resources/email-templates/
from.email.address=${TEST_MAIL_FROM:${MEALMANAGER_EMAIL_FROM:test@example.com}}

# RabbitMQ test configuration
# Note: Most tests will have listeners disabled by DisableRabbitListenersInitializer
spring.rabbitmq.host=${TEST_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${TEST_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${TEST_RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${TEST_RABBITMQ_PASSWORD:guest}

# Disable certain features in test mode
app.debug.enabled=true 