name: Lint Code

on:
  push:
    branches: [ '**' ]
  workflow_call:
  workflow_dispatch:

jobs:
  lint-api:
    name: Lint API (Java)
    runs-on: ubuntu-latest
    if: ${{ always() && (github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'api/') || contains(github.event.head_commit.added, 'api/')) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read Java version from pom.xml
        id: get_java_version
        run: |
          JAVA_VERSION=$(grep -A 1 '<java.version>' api/pom.xml | grep -oP '(?<=>)\d+(?=<)')
          echo "java_version=$JAVA_VERSION" >> $GITHUB_OUTPUT
          echo "java_version=$JAVA_VERSION"

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ steps.get_java_version.outputs.java_version }}
          distribution: 'corretto'
          cache: maven

      - name: Run checkstyle
        run: cd api && mvn -B checkstyle:check -Denvfile.skip=true

  lint-client:
    name: Lint Client (TypeScript)
    runs-on: ubuntu-latest
    if: ${{ always() && (github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'client/') || contains(github.event.head_commit.added, 'client/')) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: client/package.json
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        working-directory: client
        run: npm ci

      - name: Run ESLint
        working-directory: client
        run: npm run lint

  lint-terraform:
    name: Lint Terraform
    runs-on: ubuntu-latest
    if: ${{ always() && (github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'deploy/terraform/') || contains(github.event.head_commit.added, 'deploy/terraform/')) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read Terraform version
        id: get_tf_version
        run: |
          TF_VERSION=$(grep -A 1 'required_version' deploy/terraform/providers.tf | grep -oP '(?<=>= )\d+\.\d+\.\d+(?=")')
          echo "tf_version=$TF_VERSION" >> $GITHUB_OUTPUT
          echo "tf_version=$TF_VERSION"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.get_tf_version.outputs.tf_version }}

      - name: Check formatting
        working-directory: deploy/terraform
        run: |
          terraform init -backend=false
          terraform validate
          terraform fmt -check -recursive
