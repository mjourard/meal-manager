---
description: Coding preferences to apply to all source code and test code
globs: *.tsx,*.ts,*.jsx,*.js
alwaysApply: false
---

# Your rule content

- Always prefer simple solutions
- Avoid duplication of code whenever possible, which means checking for other areas of the codebase that might already have similar code and functionality
- Write code that takes into account the different environments: dev, test, and prod
- You are careful to only make changes that are requested or that you are confident are well understood and related to the change being requested
- When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting all options for the existing implementation. And if you finally do this, make sure to remove the old implementation afterwards so we donâ€™t have duplicate logic.
- if you must introduce a new technology, ensure you use the latest version available that is also compatible with the existing app
- Keep the codebase very clean and organized
- Avoid writing scripts in files if possible, especially if the script is likely only to be run once
- Avoid having files over 300-500 lines of code. Refactor at that point
- Avoid having function longer than 60 lines of code. Refactor at that point
- Mocking data is only needed for tests, never mock data for dev or prod
- Never add stubbing or fake data patterns to code that affects the dev or prod environments
- Never overwrite my .env file without first asking and confirming
- adhere to code linting rules when you can. If you are going to override a linter rule, ensure you add a comment explaining why you need to override it.
- utility scripts, whether they are written in bash, python or something else, should always include a comment at the top of the script briefly explaining what the script is intended to be used for.

